name: Go

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DATABASE_USER: root
      DATABASE_PASSWORD: root
      DATABASE_PORT: 3306
      DATABASE_HOST: 127.0.0.1
      DATABASE: workout_tracker
      SERVER_PORT: 9000
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21.4"

      - name: Start MySQL Service
        run: |
          sudo systemctl start mysql.service

      - name: Install MySQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client

      - name: Create Database
        run: |
          mysql -u $DATABASE_USER -p"$DATABASE_PASSWORD" -e "CREATE DATABASE IF NOT EXISTS $DATABASE;"

      - name: Build
        run: go build -v -o ./workout

      - name: Start Server in Background
        run: |
          ./workout server > /dev/null 2>&1 &
          echo $! > server.pid
          sleep 5

      - name: Health Check
        run: |
          sleep 5  # Give server some time to start
          response=$(curl -v http://localhost:9000/workouttracker/health)
          if [[ "$response" == '{"Status":"Healthy"}' ]]; then
            echo "Server is up, running and healthy!"
          else
            echo "Server is not healthy...."
            
            echo "Printing Server Logs..."
            cat server.log
            
            exit 1
          fi

      - name: Stop Server
        run: |
          kill $(cat server.pid)
  dependency-check:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Install Java and Maven
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-11-jdk maven

    - name: Verify Java and Maven Installation
      run: |
        java -version
        mvn -version

    - name: Clone and Build Dependency-Check
      run: |
        git clone https://github.com/dependency-check/DependencyCheck.git
        cd DependencyCheck
        git checkout main
        mvn install -DskipTests

    - name: Run Dependency-Check CLI
      run: |
        cd DependencyCheck/cli/target/release/bin/
        chmod +x dependency-check.sh
        ./dependency-check.sh \
          --scan ../../../../../go.mod ../../../../../go.sum \
          --out ../../../../../dependency-check-report \
          --format "JSON" \
          --enableExperimental \
          --enableRetired \
          --failOnCVSS 7 \
          --project "WorkoutTracker" \
          --nvdApiKey ${{ secrets.NVD_API_KEY }}
      env:
        NVD_API_KEY: ${{ secrets.NVD_API_KEY }}

    - name: Upload Dependency-Check Report
      uses: actions/upload-artifact@v4
      with:
        name: dependency-check-report
        path: dependency-check-report/*
        if-no-files-found: error